name: Upload Tracks from Issues

on:
  issue_comment:
    types: [created]

jobs:
  process_track:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug info
        run: |
          echo "üîç Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
          echo "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${{ github.event.comment.body }}"
          echo "–ï—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è: ${{ toJSON(github.event.comment.attachments) }}"

      - name: Check for upload command
        id: check_upload
        run: |
          if echo "${{ github.event.comment.body }}" | grep -q "!upload"; then
            echo "‚úÖ –ö–æ–º–∞–Ω–¥–∞ !upload –Ω–∞–π–¥–µ–Ω–∞"
            echo "has_upload=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ !upload –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            echo "has_upload=false" >> $GITHUB_OUTPUT
          fi

      - name: Validate attachment
        if: steps.check_upload.outputs.has_upload == 'true'
        id: validate_attachment
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          if [ -z "${{ github.event.comment.attachments }}" ] || [ "${{ github.event.comment.attachments }}" = "[]" ]; then
            echo "‚ùå –ù–µ—Ç –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤!"
            echo "has_attachment=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          FILENAME="${{ github.event.comment.attachments[0].name }}"
          URL="${{ github.event.comment.attachments[0].url }}"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
          if echo "$FILENAME" | grep -E '\.(mp3|wav|ogg|m4a)$'; then
            echo "‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: $FILENAME"
            echo "has_attachment=true" >> $GITHUB_OUTPUT
            echo "filename=$FILENAME" >> $GITHUB_OUTPUT
            echo "url=$URL" >> $GITHUB_OUTPUT
          else
            echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: $FILENAME"
            echo "has_attachment=false" >> $GITHUB_OUTPUT
          fi

      - name: Download audio file
        if: steps.validate_attachment.outputs.has_attachment == 'true'
        run: |
          echo "üì• –°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª: ${{ steps.validate_attachment.outputs.filename }}"
          mkdir -p tracks
          
          # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
          wget -O "tracks/${{ steps.validate_attachment.outputs.filename }}" "${{ steps.validate_attachment.outputs.url }}"
          
          echo "‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ!"

      - name: Commit and push
        if: steps.validate_attachment.outputs.has_attachment == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add tracks/
          git commit -m "üéµ –î–æ–±–∞–≤–ª–µ–Ω —Ç—Ä–µ–∫: ${{ steps.validate_attachment.outputs.filename }}"
          git push
          echo "üéâ –¢—Ä–µ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!"

      - name: Skip non-upload
        if: steps.check_upload.outputs.has_upload == 'false'
        run: echo "‚ÑπÔ∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º - –Ω–µ—Ç –∫–æ–º–∞–Ω–¥—ã !upload"

      - name: Skip no attachment
        if: steps.validate_attachment.outputs.has_attachment == 'false' && steps.check_upload.outputs.has_upload == 'true'
        run: echo "‚ö†Ô∏è  –ï—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ !upload, –Ω–æ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ñ–∞–π–ª–∞"
